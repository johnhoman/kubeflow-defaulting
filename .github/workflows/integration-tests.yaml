name: Integration Tests
on:
  push:
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
        kubernetes-version: ["v1.23.3"]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - run: minikube start --kubernetes-version=${{ matrix.kubernetes-version }}
    - run: eval $(minikube docker-env) && make build-image
    - run: make update-kustomize
    - run: kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.7.1/cert-manager.yaml
    - run: kubectl apply -k config/default
    - run: |-
        # hardcoded name for now -- I'd like to think of a better way to do this without
        # pushing the image to dockerhub or running a local registry
        kubectl patch deployment kubeflow-defaulting-webhook \
            --type="json" \
            --patch='[{"op":"replace","path":"/spec/template/spec/containers/0/imagePullPolicy","value":"Never"}]'
        kubectl wait --for=condition=ready pod -l app=kubeflow-defaulting -n default --timeout=1m
    - run: python -m pip install -r test-requirements.txt
    - run: python -m pytest tests